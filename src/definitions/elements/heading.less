/*!
 * # Fomantic-UI - Heading
 * https://github.com/fomantic/Fomantic-UI/
 *
 *
 * Released under the MIT license
 * https://opensource.org/licenses/MIT
 *
 */

/*******************************
            Theme
*******************************/

@type: "element";
@element: "heading";

@import (multiple) "../../theme.config";

@notCenteredAligned: if(@variationHeadingAligned, e(":not(.centered):not(.aligned)"));
@notIcon: if(@variationHeadingIcon, e(":not(.icon)"));

/*******************************
            Heading
*******************************/

/* Standard */
.ui.heading {
    border: none;
    margin: @margin;
    padding: @verticalPadding @horizontalPadding;
    font-family: @fontFamily;
    font-weight: @fontWeight;
    line-height: @lineHeight;
    text-transform: @textTransform;
    color: @textColor;
}

.ui.heading:first-child {
    margin-top: @firstMargin;
}
.ui.heading:last-child {
    margin-bottom: @lastMargin;
}

& when (@variationHeadingSub) {
    /* --------------
       Sub Heading
    --------------- */

    .ui.heading .sub.heading {
        display: block;
        font-weight: @normal;
        padding: 0;
        margin: @subHeaderMargin;
        font-size: @subHeaderFontSize;
        line-height: @subHeaderLineHeight;
        color: @subHeaderColor;
    }
}

/* --------------
      Icon
--------------- */

.ui.heading > .icons,
.ui.heading > i.icon {
    display: table-cell;
    opacity: @iconOpacity;
    font-size: @iconSize;
    padding-top: @iconOffset;
    vertical-align: @iconAlignment;
}

/* With Text Node */
.ui.heading@{notIcon} > .icons:only-child,
.ui.heading@{notIcon} > i.icon:only-child {
    display: inline-block;
    padding: 0;
    margin-right: @iconMargin;
}

/* -------------------
        Image
-------------------- */

.ui.heading > .image:not(.icon),
.ui.heading > img {
    display: inline-block;
    margin-top: @imageOffset;
    width: @imageWidth;
    height: @imageHeight;
    vertical-align: @imageAlignment;
}
.ui.heading > .image:not(.icon):only-child,
.ui.heading > img:only-child {
    margin-right: @imageMargin;
}

/* --------------
     Content
--------------- */

.ui.heading .content {
    display: inline-block;
    vertical-align: @contentAlignment;
}

/* After Image */
.ui.heading > img + .content,
.ui.heading > .image + .content {
    padding-left: @imageMargin;
    vertical-align: @contentImageAlignment;
}

/* After Icon */
.ui.heading@{notIcon}@{notCenteredAligned} > .icons + .content,
.ui.heading@{notIcon}@{notCenteredAligned} > i.icon + .content {
    padding-left: @iconMargin;
    display: table-cell;
    vertical-align: @contentIconAlignment;
}

/* --------------
 Loose Coupling
--------------- */

.ui.heading .ui.label {
    font-size: @labelSize;
    margin-left: @labelDistance;
    vertical-align: @labelVerticalAlign;
}

/* Positioning */
.ui.heading + p {
    margin-top: @nextParagraphDistance;
}

/*******************************
            Types
*******************************/

/* --------------
     Page
--------------- */
& when not (@variationHeadingTags = false) {
    each(@variationHeadingTags, {
        @sf: @{value}SubHeaderFontSize;
        @s: @@value;
        @{value}.ui.heading {
            font-size: @s;
        }
        & when (@variationHeadingSub) {
            @{value}.ui.heading .sub.heading {
                font-size: @@sf;
            }
        }
    });
}

/* --------------
 Content Heading
--------------- */

& when not (@variationHeadingSizes = false) {
    each(@variationHeadingSizes, {
        @sf: @{value}SubHeaderFontSize;
        @shf: @{value}SubHeadingSize;
        @s: @{value}FontSize;;
        .ui.@{value}.heading {
            font-size: @@s;
            & when (@@s >= 2) {
                min-height: 1em;
            }
        }
        & when (@variationHeadingSub) {
            .ui.@{value}.heading .sub.heading {
                font-size: @@sf;
            }
            .ui.@{value}.sub.heading {
                font-size: @@shf;
            }
        }
    });
}

& when (@variationHeadingSub) {
    /* --------------
       Sub Heading
    --------------- */

    .ui.sub.heading {
        padding: 0;
        margin-bottom: @subHeadingDistance;
        font-weight: @subHeadingFontWeight;
        font-size: @subHeadingFontSize;
        text-transform: @subHeadingTextTransform;
        color: @subHeadingColor;
    }
}

& when (@variationHeadingIcon) {
    /* -------------------
            Icon
    -------------------- */

    .ui.icon.heading {
        display: inline-block;
        text-align: center;
        margin: @iconHeaderTopMargin 0 @iconHeaderBottomMargin;
    }
    .ui.icon.heading::after {
        content: "";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }

    .ui.icon.heading:first-child {
        margin-top: @iconHeaderFirstMargin;
    }
    .ui.icon.heading > .image.icon,
    .ui.icon.heading > .icons,
    .ui.icon.heading > i.icon {
        float: none;
        display: block;
        width: auto;
        height: auto;
        line-height: 1;
        padding: 0;
        font-size: @iconHeaderSize;
        margin: 0 auto @iconHeaderMargin;
        opacity: @iconHeaderOpacity;
    }
    .ui.icon.heading .corner.icon {
        font-size: @cornerIconHeaderSize;
    }
    .ui.icon.heading .content {
        display: block;
        padding: 0;
    }
    .ui.icon.heading > i.circular {
        font-size: @circularHeaderIconSize;
    }
    .ui.icon.heading > i.square {
        font-size: @squareHeaderIconSize;
    }
    & when (@variationHeadingBlock) {
        .ui.block.icon.heading > .image.icon,
        .ui.block.icon.heading > .icons,
        .ui.block.icon.heading > i.icon {
            margin-bottom: 0;
        }
    }
    & when (@variationHeadingAligned) {
        .ui.icon.heading.aligned {
            margin-left: auto;
            margin-right: auto;
            display: block;
        }
    }
}

/*******************************
            States
*******************************/
& when (@variationHeadingDisabled) {
    .ui.disabled.heading {
        opacity: @disabledOpacity;
    }
}

/*******************************
           Variations
*******************************/

& when (@variationHeadingInverted) {
    /* -------------------
          Inverted
    -------------------- */

    .ui.inverted.heading {
        color: @invertedColor;
    }
    .ui.inverted.heading .sub.heading {
        color: @invertedSubHeaderColor;
    }
    & when (@variationHeadingAttached) {
        .ui.inverted.attached.heading {
            background: @invertedAttachedBackground;
            box-shadow: none;
            border-color: transparent;
        }
    }
    & when (@variationHeadingBlock) {
        .ui.inverted.block.heading {
            background: @invertedBlockBackground;
            box-shadow: none;
            border-bottom: none;
        }
    }
}

/* -------------------
       Colors
-------------------- */
& when not (@variationHeadingColors = false) {
    each(@variationHeadingColors, {
        @color: @value;
        @c: @colors[@@color][color];
        @l: @colors[@@color][light];
        @h: @colors[@@color][hover];
        @lh: @colors[@@color][lightHover];

        .ui.@{color}.heading {
            color: @c;
        }
        a.ui.@{color}.heading:hover {
            color: @h;
        }
        & when (@variationHeadingDividing) {
            .ui.@{color}.dividing.heading {
                border-bottom: @dividedColoredBorderWidth solid @c;
            }
        }
        & when (@variationHeadingInverted) {
            .ui.inverted.@{color}.heading.heading.heading {
                color: @l;
            }
            a.ui.inverted.@{color}.heading.heading.heading:hover {
                color: @lh;
            }
            .ui.inverted.@{color}.dividing.heading {
                border-bottom: @dividedColoredBorderWidth solid @l;
            }
        }
    });
}

& when (@variationHeadingAligned) {
    /* -------------------
           Aligned
    -------------------- */

    .ui.left.aligned.heading {
        text-align: left;
    }
    .ui.right.aligned.heading {
        text-align: right;
    }
    .ui.centered.heading,
    .ui.center.aligned.heading {
        text-align: center;
    }
}

& when (@variationHeadingJustified) {
    .ui.justified.heading {
        text-align: justify;
    }
    .ui.justified.heading::after {
        display: inline-block;
        content: "";
        width: 100%;
    }
}

& when (@variationHeadingFloated) {
    /* -------------------
           Floated
    -------------------- */

    .ui.floated.heading,
    .ui[class*="left floated"].heading {
        float: left;
        margin-top: 0;
        margin-right: @floatedMargin;
    }
    .ui[class*="right floated"].heading {
        float: right;
        margin-top: 0;
        margin-left: @floatedMargin;
    }
}

& when (@variationHeadingFitted) {
    /* -------------------
           Fitted
    -------------------- */

    .ui.fitted.heading {
        padding: 0;
    }
}

& when (@variationHeadingDividing) {
    /* -------------------
          Dividing
    -------------------- */

    .ui.dividing.heading {
        padding-bottom: @dividedBorderPadding;
        border-bottom: @dividedBorder;
    }
    & when (@variationHeadingSub) {
        .ui.dividing.heading .sub.heading {
            padding-bottom: @dividedSubHeaderPadding;
        }
    }
    .ui.dividing.heading i.icon {
        margin-bottom: @dividedIconPadding;
    }
    & when (@variationHeadingInverted) {
        .ui.inverted.dividing.heading {
            border-bottom-color: @invertedDividedBorderColor;
        }
    }
}

& when (@variationHeadingBlock) {
    /* -------------------
            Block
    -------------------- */

    .ui.block.heading {
        background: @blockBackground;
        padding: @blockVerticalPadding @blockHorizontalPadding;
        box-shadow: @blockBoxShadow;
        border: @blockBorder;
        border-radius: @blockBorderRadius;
    }
    .ui.block.heading:not(h1):not(h2):not(h3):not(h4):not(h5):not(h6) {
        font-size: @mediumBlock;
    }
    & when not (@variationHeadingSizes = false) {
        each(@variationHeadingSizes, {
            @s: @{value}Block;
            .ui.@{value}.block.heading {
                font-size: @@s;
            }
        });
    }
}

& when (@variationHeadingAttached) {
    /* -------------------
           Attached
    -------------------- */

    .ui.attached.heading {
        background: @attachedBackground;
        padding: @attachedVerticalPadding @attachedHorizontalPadding;
        margin: 0 @attachedOffset;
        box-shadow: @attachedBoxShadow;
        border: @attachedBorder;
        border-radius: 0;
    }
    & when (@variationHeadingBlock) {
        .ui.attached.block.heading {
            background: @blockBackground;
        }
    }
    .ui.attached:not(.top).heading {
        border-top: none;
    }
    .ui.top.attached.heading {
        border-radius: @attachedBorderRadius @attachedBorderRadius 0 0;
    }
    .ui.bottom.attached.heading {
        border-radius: 0 0 @attachedBorderRadius @attachedBorderRadius;
    }
    & when (@variationHeadingSeamless) {
        .ui.seamless.attached:not(.bottom).heading {
            border-bottom: none;
        }
    }

    /* Attached Sizes */
    .ui.attached.heading:not(h1):not(h2):not(h3):not(h4):not(h5):not(h6) {
        font-size: @mediumAttachedSize;
    }
    & when not (@variationHeadingSizes = false) {
        each(@variationHeadingSizes, {
            @s: @{value}AttachedSize;
            .ui.@{value}.attached.heading {
                font-size: @@s;
            }
        });
    }
}

/* -------------------
        Sizing
-------------------- */

.ui.heading:not(h1):not(h2):not(h3):not(h4):not(h5):not(h6) {
    font-size: @mediumFontSize;
}

& when (@variationHeadingLegacyHeader) {
    .header:extend(.heading all){};
}

// stylelint-disable no-invalid-position-at-import-rule
@import (multiple, optional) "../../overrides.less";
